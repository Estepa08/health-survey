// –ß–∏—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –±–∞–ª–ª–æ–≤ –æ–ø—Ä–æ—Å–Ω–∏–∫–∞
function calculateScore(answers) {
  if (!answers || answers.length === 0) return 0;

  return answers.reduce((sum, answer) => {
    return sum + (answer || 0);
  }, 0);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function showResult(score, totalQuestions) {
  const maxScore = (totalQuestions - 1) * 4;
  const percentage = maxScore === 0 ? 0 : Math.round((score / maxScore) * 100);

  let message;
  if (percentage < 25) {
    message = '–°–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã';
  } else if (percentage < 50) {
    message = '–õ–µ–≥–∫–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è';
  } else if (percentage < 75) {
    message = '–í—ã—Ä–∞–∂–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è';
  } else {
    message = '–°–∏–ª—å–Ω–æ –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏';
  }

  console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç: ${score} –±–∞–ª–ª–æ–≤ (${percentage}%) - ${message}`);
  return { score, percentage, message };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
async function loadQuestions() {
  try {
    const response = await fetch('./questions.json');
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    return await response.json();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤:', error);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function displayQuestion(question) {
  // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  const questionText = document.getElementById('question-text');
  const optionsContainer = document.getElementById('options-container');
  const currentQuestionSpan = document.getElementById('current-question');
  const totalQuestionsSpan = document.getElementById('total-questions');

  if (!questionText || !optionsContainer) {
    console.error('–ù–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞');
    return;
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
  questionText.textContent = question.question;

  // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
  optionsContainer.innerHTML = '';

  // –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
  question.options.forEach((optionText, index) => {
    const optionElement = document.createElement('div');
    optionElement.className = 'option';
    optionElement.textContent = optionText;
    optionElement.dataset.value = index; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (0-4)

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    optionElement.addEventListener('click', () => {
      // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —É –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
      document.querySelectorAll('.option').forEach((opt) => {
        opt.classList.remove('selected');
      });
      // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
      optionElement.classList.add('selected');

      console.log(`–í—ã–±—Ä–∞–Ω –æ—Ç–≤–µ—Ç: ${optionText} (–±–∞–ª–ª: ${index})`);
    });

    optionsContainer.appendChild(optionElement);
  });

  console.log(`–û—Ç–æ–±—Ä–∞–∂–µ–Ω –≤–æ–ø—Ä–æ—Å: "${question.question}"`);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–ø—Ä–æ—Å–Ω–∏–∫–∞
async function initQuestionnaire() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—Ä–æ—Å–Ω–∏–∫–∞...');

  const questions = await loadQuestions();

  if (questions.length === 0) {
    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã');
    return;
  }

  console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${questions.length} –≤–æ–ø—Ä–æ—Å–æ–≤`);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
  const totalQuestionsSpan = document.getElementById('total-questions');
  if (totalQuestionsSpan) {
    totalQuestionsSpan.textContent = questions.length;
  }

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
  if (questions.length > 0) {
    displayQuestion(questions[0]);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initQuestionnaire);
